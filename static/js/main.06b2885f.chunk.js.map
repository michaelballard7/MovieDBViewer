{"version":3,"sources":["components/images/no_image.jpg","components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/elements/Header.js","components/elements/HeroImage.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/elements/Spinner.js","config.js","components/Home.js","components/hooks/useGetMovies.js","components/elements/NotFound.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/elements/MovieInfoBar.js","components/elements/Actor.js","components/Movie.js","components/hooks/useGetMovie.js","components/App.js","index.js"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","state","setState","timeOut","useRef","name","size","type","placeholder","onChange","e","value","target","clearTimeout","current","setTimeout","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","movieId","clickable","movieName","pathname","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","StyledSpinner","Spinner","API_URL","API_KEY","IMAGE_BASE_URL","SEARCH_BASE_URL","POPULAR_BASE_URL","Home","movies","loading","setLoading","error","setError","getMovies","endpoint","a","isLoadMore","search","fetch","json","res","prev","results","heroImage","getRandomImage","currentPage","page","totalPages","total_pages","console","log","Math","floor","random","length","useEffect","useGetMovies","searchTerm","setSearchTerm","backdrop_path","original_title","overview","endPoint","map","movie","key","id","poster_path","NoImage","searchEndpoint","popularEndpoint","NotFound","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","director","credit_id","StyledNavigation","Navigation","MovieInfoBar","Actor","Movie","setMovie","getMovie","useCallback","result","creditsEndpoint","creditResults","crew","filter","member","job","actors","cast","useGetMovie","match","params","GlobalStyle","createGlobalStyle","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06b2885f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport RMDBLogo from '../images/reactMovie_logo.png';\nimport TMDBLogo from '../images/tmdb_logo.svg';\n\nimport {Link} from 'react-router-dom'\n\nconst StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n  \n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px){\n      min-height: 0px\n    }\n  }\n`;\n\nconst StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px){\n    width: 150px;\n    margin-top: 5px;\n  }\n`\n\nconst StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 20px;\n  float: right;\n\n  @media screen and (max-width: 500px){\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <div className=\"header-content\">\n\n      <Link to=\"/\">\n        <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\" />\n      </Link>\n        \n        <StyledTMDBLogo src={TMDBLogo} alt=\"tmdb-logo\" />\n      </div>\n    </StyledHeader>\n  )\n}\n\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nconst HeroImage = ({ title, text, image }) => (\n  <StyledHeroImage image={image}>\n    <div className=\"heroimage-content\">\n      <div className=\"heroimage-text\">\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n  </StyledHeroImage>\n)\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useRef } from 'react'\nimport FontAwesome from 'react-fontawesome';\nimport { StyledSearchBar, StyledSearchBarContent } from '../styles/StyledSearchBar';\n\nconst SearchBar = ({ callback }) => {\n\n  const [state, setState] = useState(\"\");\n  const timeOut = useRef(null)\n  const searchMovie = (e) => {\n    const { value } = e.target\n    setState(value)\n    clearTimeout(timeOut.current)\n    timeOut.current = setTimeout(() => {\n      callback(value)\n    }, 1000)\n  }\n\n  return (\n    <StyledSearchBar>\n      <StyledSearchBarContent>\n        <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search for a movie\"\n          onChange={searchMovie}\n          value={state} />\n      </StyledSearchBarContent>\n    </StyledSearchBar>\n  )\n}\n\nexport default SearchBar;","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid'\n\nconst Grid = ({ header, children }) => (\n\n  <StyledGrid>\n    <h1>{header}</h1>\n    <StyledGridContent>\n      {children}\n    </StyledGridContent>\n  </StyledGrid>\n)\n\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react'\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb';\nimport {Link} from 'react-router-dom'\n\nconst MovieThumb = ({ image, movieId, clickable, movieName }) => {\n\n  return (\n    <StyledMovieThumb>\n      {clickable ? ( <Link to={{pathname:`/${movieId}`, movieName:`${movieName}`}}><img className='clickable' src={image} alt=\"moviethumb\" /></Link>) : (<img src={image} alt=\"moviethumb\" />)}\n    </StyledMovieThumb>\n  )\n\n}\n\n\nexport default MovieThumb;","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react'\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\n\nconst LoadMoreBtn = ({ text, callback }) => (\n  <StyledLoadMoreBtn type=\"button\" onClick={callback}>\n    {text}\n  </StyledLoadMoreBtn>\n)\n\n\nexport default LoadMoreBtn;","import React from 'react'\nimport styled from 'styled-components'\n\n\nconst StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3;\n  border-top: 5px solid #16d47b;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n\n`\n\nconst Spinner = ( ) => {\n\n  return <StyledSpinner />\n\n}\n\n\n\nexport default Spinner;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '73af4d139395f0925592a97a918f14dc';\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\nconst SEARCH_BASE_URL  = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, SEARCH_BASE_URL, POPULAR_BASE_URL };\n","import React, { useState } from 'react';\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, SEARCH_BASE_URL, POPULAR_BASE_URL } from '../config'\nimport { useGetMovies } from './hooks/useGetMovies'\nimport NoImage from './images/no_image.jpg'\n\nconst Home = () => {\n\n  const [{ state, loading, error }, getMovies] = useGetMovies();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const searchMovies = search => {\n    setSearchTerm(search)\n    const endPoint = search && search !== ' ' ? `${SEARCH_BASE_URL}${search}&include_adult=true` : POPULAR_BASE_URL\n    getMovies(endPoint)\n  }\n\n  const loadMovies = () => {\n    const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${state.currentPage + 1}&include_adult=true`;\n    const popularEndpoint = `${POPULAR_BASE_URL}&page=${state.currentPage + 1}`;\n    const endPoint = searchTerm ? searchEndpoint : popularEndpoint;\n    getMovies(endPoint);\n  }\n\n  if (error) return <div>Something Went Wrong</div>\n  if (!state.movies[0]) return <Spinner />;\n\n  return (\n    <>\n      {!searchTerm && (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.heroImage.backdrop_path}`}\n          title={state.heroImage.original_title}\n          text={state.heroImage.overview}\n        />)\n      }\n\n      <SearchBar callback={searchMovies} />\n\n      <Grid header={searchTerm ? 'Search results' : 'Popular Movies'}>\n        {\n          state.movies.map(movie => (\n            <MovieThumb\n              key={movie.id}\n              clickable\n              image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage}\n              movieId={movie.id}\n              movieName={movie.original_title} />\n          ))\n        }\n      </Grid>\n\n      {loading && <Spinner />}\n      {state.currentPage < state.totalPages && !loading && (<LoadMoreBtn text={\"Load More Movies\"} callback={loadMovies} />)}\n    </>\n  )\n}\n\n\nexport default Home;","import { useState, useEffect } from 'react'\nimport { POPULAR_BASE_URL } from '../../config'\n\nexport const useGetMovies = () => {\n\n  const [state, setState] = useState({ movies: [] });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const getMovies = async (endpoint) => {\n    setError(false)\n    setLoading(true)\n    const isLoadMore = endpoint.search('page')\n    try {\n      const res = await (await fetch(endpoint,)).json();\n      setState(prev => ({\n        ...prev,\n        movies: isLoadMore !== -1 ? [...prev.movies, ...res.results] : [...res.results],\n        heroImage: prev.heroImage || res.results[getRandomImage(res.results)],\n        currentPage: res.page,\n        totalPages: res.total_pages\n      }))\n    } catch (error) {\n      console.log(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getRandomImage = (res) => {\n    return Math.floor(Math.random() * res.length)\n  }\n\n  useEffect(() => {\n    getMovies(POPULAR_BASE_URL)\n  }, [])\n\n  return [{ state, loading, error }, getMovies]\n}\n","import React from 'react';\n\n\nconst NotFound = () => (\n  <h1>Sorry this page is not found</h1>\n)\n\n\n\nexport default NotFound;","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react'\nimport NoImage from '../images/no_image.jpg';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../config';\nimport MovieThumb from './MovieThumb';\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\n\nfunction MovieInfo({ movie }) {\n\n  console.log('Path: ', `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`)\n  return (\n    <div>\n      <StyledMovieInfo backdrop={movie.backdrop_path}>\n        <div className=\"movieinfo-content\">\n          <div className=\"movieinfo-thumb\">\n            <MovieThumb\n              image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage}\n              clickable={false}\n            />\n          </div>\n\n          <div className=\"movieinfo-text\">\n            <h1>{movie.title}</h1>\n            <h3>PLOT</h3>\n            <p>{movie.overview}</p>\n\n\n            <div className=\"rating-director\">\n              <div>\n                <h3>IMDB RATING</h3>\n                <div className=\"score\">{movie.vote_average}</div>\n              </div>\n              <div className=\"director\">\n                <h3>DIRECTOR{movie.directors.length > 1 ? 's' : ''}</h3>\n                {\n                  movie.directors.map(director => (\n                    <p key={director.credit_id}>{director.name}</p>\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </StyledMovieInfo>\n\n    </div>\n  )\n}\n\nexport default MovieInfo;\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {StyledNavigation} from '../styles/StyledNavigation'\n\nconst Navigation = ({movie}) => (\n  <StyledNavigation>\n    <div className=\"navigation-content\">\n\n      <Link to=\"/\">\n        <p>Home</p>\n      </Link>\n      <p>|</p>\n      <p>{movie}</p>\n    </div>\n\n  </StyledNavigation>\n)\nexport default Navigation\n","import React from 'react';\n\n\n\nfunction MovieInfoBar({}) {\n  return (\n    <div></div>\n  )\n}\n\nexport default MovieInfoBar\n","import React from 'react'\n\nfunction Actor() {\n  return (\n    <div>\n      Actor\n    </div>\n  )\n}\n\nexport default Actor\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport MovieInfo from './elements/MovieInfo';\nimport Navigation from './elements/Navigation';\nimport MovieInfoBar from './elements/MovieInfoBar';\nimport Actor from './elements/Actor';\nimport Grid from './elements/Grid';\nimport Spinner from './elements/Spinner';\n\nimport {useGetMovie} from './hooks/useGetMovie';\n\n\nconst Movie = (props) => {\n  \n  const { movieId } = props.match.params\n\n  const [movie, loading, error] = useGetMovie(movieId)\n\n  if(error) return <div>Something Went Wrong </div>\n\n  if(loading) return <Spinner />\n\n\n  return (\n    <>\n      <Navigation movie={movie.original_title}/>\n      <MovieInfo movie={movie} />\n      <MovieInfoBar />\n      <Grid>\n      <Actor />\n      </Grid>\n    </>\n  )\n}\n\nexport default Movie;\n","import {useEffect, useState, useCallback} from 'react';\nimport {API_URL, API_KEY} from '../../config'\n\n\nexport const useGetMovie = movieId => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const getMovie = useCallback(async ()=> {\n\n    setError(false)\n    setLoading(true)\n\n    try {\n      \n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`\n      const result = await(await fetch(endpoint)).json()\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n      const creditResults =  await(await fetch(creditsEndpoint)).json()\n      const directors = creditResults.crew.filter((member => member.job === 'Director'))\n      setMovie({\n        ...result,\n        actors: creditResults.cast,\n        directors\n      })\n\n    } catch(error) {\n      console.log(error)\n      setError(true);\n    } finally {\n      setLoading(false)\n    }\n\n  }, [movieId])\n\n  useEffect( () => {\n    getMovie()\n  },[getMovie])\n\n  return [movie, loading, error]\n\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './elements/Header'\nimport Home from './Home';\nimport NotFound from './elements/NotFound'\nimport Movie from './Movie'\n\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body{\n    margin: 0;\n    paddng: 0;\n    box-sizing: border-box\n  }\n`\n\nconst App = () => (\n  <BrowserRouter>\n    <>\n      <Header />\n\n      <Switch>\n        <Route path=\"/:movieId\" component={Movie} exact/> \n        <Route path=\"/\" component={Home} exact />\n        <Route component={NotFound} />\n      </Switch>\n      \n      <GlobalStyle />\n    </>\n  </BrowserRouter>\n\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}